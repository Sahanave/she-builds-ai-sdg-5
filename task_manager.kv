<SHLabel@Label,SHButton@Button>:
    size_hint_min: [v + dp(8) for v in self.texture_size]
    halign: 'center'

<SHTask>:
    orientation: 'vertical'
    spacing: '4dp'
    drag_timeout: 0
    drag_cls: 'task_to_be_done'
    size: '200dp', '200dp'
    size_hint: None, None
    opacity: .5 if self.is_being_dragged else 1.
    canvas.before:
        Color:
            rgba: .4, .4, .4, 1
        Line:
            rectangle: (*self.pos, *self.size, )
    Image:
        allow_stretch: True
        texture: root.datum.texture
        size_hint_y: 3.
    SHLabel:
        text: '{} \n({} time {} energy)'.format(root.datum.name, root.datum.time, root.datum.energy)
        color: rgba("#E75480")
        bold: True

<SHActorImage@BoxLayout>:
    source : 'default'
    name : 'default'
    Image:
        allow_stretch: True
        source: root.source
        size: self.texture_size
    SHLabel:
        text:'\n{}'.format(root.name)
        color: rgba("#E75480")
        bold: True
        font_size: max(20, sp(16))



<SHShelf@KXReorderableBehavior+RVLikeBehavior+StackLayout>:
    padding: '10dp'
    spacing: '10dp'
    size_hint_min_y: self.minimum_height
    drag_classes: ['task_to_be_done', ]
    viewclass: 'SHTask'

<SHActor@SHShelf>:
    actor_name : 'default'
    energy : 0
    time : 0

<SHMain>:
    orientation: 'vertical'
    padding: '10dp'
    spacing: '10dp'
    prompt : prompt_text
    male_details : male_details
    female_details : female_details
    fact_button : fact

    BoxLayout:
        BoxLayout:
            orientation: 'vertical'
            canvas.before:
                Rectangle:
                    pos: self.pos
                    size: self.size
                    source: 'assets/city_bg.jpg'
            SHLabel:
                id : prompt_text
                text: "Balance \n\n"
                font_size: max(30, sp(20))
                text_size: self.width, None
                center_x: root.width / 4
                top: root.top - 50
                size: self.texture_size
                bold: True
                color: rgba("#A52A2A")
            SHLabel:
                text: '\n\n\nDistribute tasks for our lovely couple'
                font_size: max(30, sp(20))
                bold: True
                color: rgba("#734F96")
            ScrollView:
                size_hint_y: 1000.
                always_overscroll: False
                SHShelf:
                    id: shelf
        Splitter:
            sizable_from: 'left'
            min_size: 100
            max_size: root.width
            BoxLayout:
                orientation: 'vertical'
                canvas.before:
                    Rectangle:
                        pos: self.pos
                        size: self.size
                        source: 'assets/city_bg2.jpeg'
                BoxLayout: 
                    SHActorImage:
                        id : male_details
                    SHActor:
                        canvas.before:
                            Color:
                                rgba: 1, 0, 1, 1
                            Line:
                                rectangle: (*self.pos, *self.size, )
                        id: man
                    SHActorImage:
                        id : female_details
                    SHActor:
                        canvas.before:
                            Color:
                                rgba: 1, 0, 1, 1
                            Line:
                                rectangle: (*self.pos, *self.size, )
                        id: woman
    BoxLayout:
        size_hint_y: None
        height: self.minimum_height
        SHButton:
            text: 'New Game'
            on_press: shelf.data = sorted(shelf.data, key=lambda d: d.time)
        Widget:  # This can act as a spacer if needed
            size_hint_y: None
            height: dp(10)  # Adjust the height to create space

        SHButton:
            text: 'Total'
            on_press: root.show_total(sum([data.time for data in man.data]), sum([data.energy for data in man.data]))
        SHButton:
            text: 'Submit'
            on_press: root.show_total(sum([data.time for data in woman.data]), sum([data.energy for data in woman.data]))
        SHButton:
            id : fact
            text: 'Do you know'
            on_press: root.show_message()